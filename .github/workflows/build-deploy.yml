name: Build and Push to Self-Hosted Registry

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-native:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Setup Tailscale
      uses: tailscale/github-action@v2
      with:
        authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
        # We don't need --accept-dns anymore, just the network tunnel
        
    # CRITICAL: Install your custom CA Certificate to make Docker trust your registry
    - name: Install custom CA Certificate
      run: |
        # This is the standard location for Docker to find registry-specific CAs.
        # The directory name MUST match the host you are connecting to (your server's IP).
        sudo mkdir -p /etc/docker/certs.d/10.0.1.140
        echo "${{ secrets.REGISTRY_CA_CERT }}" | sudo tee /etc/docker/certs.d/10.0.1.140/ca.crt

    # Login to your new self-hosted registry using its IP address
    - name: Login to Self-Hosted Registry
      run: |
        echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login 10.0.1.140 -u "${{ secrets.REGISTRY_USER }}" --password-stdin
        
    - name: Build and Push Native Image
      run: |
        # The registry argument now points directly to your server's IP address
        mvn clean package \
          -Dquarkus.package.type=native \
          -Dquarkus.native.container-build=true \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.push=true \
          -Dquarkus.container-image.registry=10.0.1.140 \
          -Dquarkus.container-image.group=mcarr \
          -Dquarkus.container-image.tag=${{ github.sha }}-native